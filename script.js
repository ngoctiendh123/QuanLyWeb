import { openDB } from "./indexeddb.js";

// ========================== MENU ==========================

function toggleMenu() {
    let menu = document.getElementById("menu");
    if (menu) {
        menu.classList.toggle("active");
    } else {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y menu!");
    }
}

document.addEventListener("click", function(event) {
    let menu = document.getElementById("menu");
    let menuButton = document.querySelector(".menu-btn");
    
    if (menu && menuButton && !menu.contains(event.target) && !menuButton.contains(event.target)) {
        menu.classList.remove("active");
    }
});

// ========================== HI·ªÇN TH·ªä S·∫¢N PH·∫®M ==========================

async function displayProducts() {
    try {
        console.log("üöÄ ƒêang m·ªü IndexedDB...");
        const db = await openDB();
        console.log("‚úÖ IndexedDB m·ªü th√†nh c√¥ng!");

        const transaction = db.transaction("products", "readonly");
        const store = transaction.objectStore("products");
        const products = await store.getAll();
        console.log("üì¶ D·ªØ li·ªáu l·∫•y t·ª´ IndexedDB:", products);

        const productList = document.getElementById("productList");
        if (!productList) {
            console.error("‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ 'productList'");
            return;
        }

        productList.innerHTML = "";

        if (!products || products.length === 0) {
            productList.innerHTML = "<p class='no-products'>‚ö†Ô∏è Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o!</p>";
            return;
        }

        products.forEach(product => {
            if (!product.name || !product.price || !product.quantity) {
                console.warn("‚ö†Ô∏è D·ªØ li·ªáu s·∫£n ph·∫©m b·ªã thi·∫øu:", product);
                return;
            }

            const productItem = document.createElement("div");
            productItem.classList.add("product-card");
            productItem.innerHTML = `
                <div class="product-info">
                    <h3>${product.name}</h3>
                    <p><strong>Gi√°:</strong> ${Number(product.price).toLocaleString()} VND</p>
                    <p><strong>S·ªë l∆∞·ª£ng:</strong> ${product.quantity}</p>
                </div>
                <button class="edit-btn" data-name="${product.name}">‚úèÔ∏è S·ª≠a</button>
                <button class="delete-btn" data-name="${product.name}">‚ùå X√≥a</button>
            `;
            productList.appendChild(productItem);
        });

    } catch (error) {
        console.error("‚ùå L·ªói khi hi·ªÉn th·ªã s·∫£n ph·∫©m:", error);
    }
}

// ========================== X√ìA S·∫¢N PH·∫®M ==========================
async function deleteProduct(productName) {
    try {
        const db = await openDB();
        const transaction = db.transaction("products", "readwrite");
        const store = transaction.objectStore("products");
        await store.delete(productName);
        console.log(`‚úÖ ƒê√£ x√≥a s·∫£n ph·∫©m: ${productName}`);
        displayProducts();
    } catch (error) {
        console.error("‚ùå L·ªói khi x√≥a s·∫£n ph·∫©m:", error);
    }
}

document.addEventListener("click", (event) => {
    if (event.target.classList.contains("delete-btn")) {
        const productName = event.target.getAttribute("data-name");
        if (confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m \"${productName}\"?`)) {
            deleteProduct(productName);
        }
    }
});

// ========================== KH·ªûI CH·∫†Y ==========================
document.addEventListener("DOMContentLoaded", () => {
    console.log("üìå DOM ƒë√£ t·∫£i xong!");
    displayProducts();
    let menuButton = document.querySelector(".menu-btn");
    if (menuButton) {
        menuButton.addEventListener("click", toggleMenu);
    }
});
