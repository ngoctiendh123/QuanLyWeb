import { openDB, saveToIndexedDB, checkProductExists } from "./indexeddb.js"; // X·ª≠ l√Ω IndexedDB

// üìå Th√™m s·∫£n ph·∫©m m·ªõi
async function addProduct(event) {
    event.preventDefault(); // NgƒÉn form reload trang

    const name = document.getElementById("productName").value.trim();
    const price = parseFloat(document.getElementById("productPrice").value.trim());
    const quantity = parseInt(document.getElementById("productQuantity").value.trim(), 10);

    if (!name || isNaN(price) || isNaN(quantity)) {
        alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin h·ª£p l·ªá!");
        return;
    }

    const product = { name, price, quantity, firebaseID: null };

    // üìå Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i ch∆∞a
    if (await checkProductExists(name)) {
        alert("‚ö†Ô∏è S·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng!");
        return;
    }

    // üöÄ L∆∞u v√†o IndexedDB (ƒë·ªìng b·ªô s·∫Ω x·ª≠ l√Ω ri√™ng)
    await saveToIndexedDB(product);

    // üîÑ Reset form
    document.getElementById("productForm").reset();
    alert("üéâ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!");
}

// üìå G√°n s·ª± ki·ªán cho n√∫t "Th√™m s·∫£n ph·∫©m"
document.addEventListener("DOMContentLoaded", () => {
    const addProductBtn = document.getElementById("addProductBtn");
    if (addProductBtn) {
        addProductBtn.addEventListener("click", addProduct);
    } else {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y n√∫t 'Th√™m s·∫£n ph·∫©m'!");
    }
});
